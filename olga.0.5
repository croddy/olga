#!/usr/local/bin/perl -s
#

use Socket;
use strict; 
use vars qw($channel $mynick %data $irc $conn);
use lib qw(/home/hsiao/sys/perl/lib);
use Net::IRC;

my (@sagscope) = split /\n/, <<EOT;
Dear Teeth-Shaking, Glass-Breaking,
Rump-Roasting Bun-Toasting Flash of
Liquid Lightning: I dreamed you finally
revealed your secret identity after all
these years--you know, about how you
came from the planet Lovemania in order
to teach all earthlings how to feel
horny for clouds, trees, tigers, and
even the ocean itself!  Is my dream
true?  Please say it is!  Tell me you're
really ready to drop your overly
respectable pose so that you may spread
erotic healing throughout the land!
Dare to become the sublimely lustful
worshiper of beauty and truth you were
born to be!
EOT

my %index = (
    "dow", "\^DJI",
    "nasdaq", "\^IXIC",
    "s\&p", "\^SPX",
);

my (@wit) = 
    ( qq(That's \"Olga\"; \"Ms. Bichachi,\" if you're nasty.),
      "Wha\'hap\'n\?",
      "Got Milk?",
      "hey, how\'s it goin?",
      "I\'m bored; what plaything do you have for me today\?",
      );			

my (@jayquotes) = ( "This functionality is dumn and old...quit asking" );

my (@oldjayquotes) = 
    (
     "I've been with Sheri for nine years, and we're watching what Jackie wants to watch\!",
     "pistachios are the best peanuts there is\!",
     "Hi, Keith, this is Sylvia",
     "I don't find you at all attractive",
     "what I mean by that is that I will never, ever, under any circumstances have sex with you",
     "I don't know how long midnight lasts.",
     "dammit, i burned my poptarts.",
     "I'm trying to decide if I should digest.",
     );
	   
$channel = $ARGV[0];
$mynick = $ARGV[1];
print "channel: $channel\n";
$irc = new Net::IRC;
$mynick = 'olga' if (!$mynick);
$conn = $irc->newconn(Nick => "$mynick",
                      Server => 'irc.cimedia.com',
                      Port => 6667,
                      Ircname => 'Whatcha lookin at, bichachi?',
		      Username => 'olga',
);

$conn->add_handler(['376', '422'], \&on_connect);
$conn->add_handler('public', \&on_public);
$conn->add_handler('msg', \&on_public);
$conn->add_global_handler(353, \&on_names);
$irc->start;

sub on_connect 
{
    my $self = shift;
    print "Attempting to join $channel\n";
    $self->join("$channel");
    srand($$);
}

sub on_public {
    my ($self, $event) = @_;
    my ($nick) = $event->nick;
    my ($userhost) = $event->userhost ();
    my ($arg) = $event->args ();
    my ($type) = $event->type ();
    my ($msg) = "$nick, ";
    my @result;

    my $recip = ($event->to ())[0];
    print $recip,"\n";

    if (($userhost =~ /^~hsiao\@biner.cimedia.com$/i) && ($type eq "msg")) {
	if ($arg =~ /say (\S+) (.+)/i) {
	    $self->privmsg ($1, "$2\n");
	}
	elsif ($arg =~ /zwrite (\S+) (.+)/) {
	    system ('/usr/local/bin/zwrite', $1, '-m', $2);
	}
    }
    elsif ($arg =~ /^olga/i) {
	if ($arg =~ /(stock|quote)\s+(.*)/) {
	    if (($1 eq "quote") && ($2 =~ /jay/i)) {
		$msg .= $jayquotes[rand(@jayquotes)];
	    }
	    else {
		@result = @{&get_stockprice($2,5)};
		for (my $i = 0; $i < $#result;$i++ ) {
		    $self->privmsg($channel, $result[$i]);
		    sleep 2;
		}
		$msg = $result[$#result];
	    }
	}
	elsif ($arg =~ /(qwhois)\s+(.*)/) {
	    @result = @{&get_stockprice($2,9)};
	    for (my $i = 0; $i < $#result;$i++ ) {
		$self->privmsg($channel, $result[$i]);
		sleep 2;
	    }
	    $msg = $result[$#result];
	}
	elsif ($arg =~ /(dow|nasdaq|s&p)/i) {
	    @result = @{&get_stockprice($index{"$1"},5)};
	    for (my $i = 0; $i < $#result;$i++ ) {
		$self->privmsg($channel, $result[$i]);
		sleep 2;
	    }
	    $msg = $result[$#result];
	}
	elsif ($arg =~ /countdown\s+(\d+)/) {
	    if ($1 < 180) {
		sleep $1;
		$msg .= "this is your reminder.";
	    }
	}
	elsif ($arg =~ /websters\s+black\s+crappie/) {
	    $msg .= "you can't even do that, so don't even try.";
	}
	elsif ($arg =~ /(saurus|roget)\s+([^\s]+)/) {
	    @result = @{&roget($2)};
	    for (my $i = 0; $i < $#result;$i++ ) {
		$self->privmsg($channel, $result[$i]);
		sleep 2;
	    }
	    $msg = $result[$#result];
	}
	elsif ($arg =~ /(handle|moniker)\s+([^\s]+)/) {
	    $msg .= &handle($2);
	}
	elsif ($arg =~ /sniglet(.*)/) {
		$msg .= &get_sniglet($1);
	}
	elsif ($arg =~ /horoscope\s+([^\s]+)/) {
	    if ($1 !~ /sagittarius/) {
		$msg = "$1, you're gonna die";
		$msg .= " . . . twice" if ($1 =~ /gemini/i);
		$msg .= ".";
	    }
	    else {
		$self->privmsg($channel, "Sagittarius: ");
		for (my $i = 0; $i < $#sagscope - 1;$i++ ) {
		    $self->privmsg($channel, $sagscope[$i]);
		}
		$msg = $sagscope[$#sagscope];
	    }
	}
	else {
	    $msg .= $wit[rand(@wit)];
	}
	$self->privmsg($channel, "$msg\n");
    }
    elsif ($arg =~ /^(ls|pwd)$/) {
	$msg .= "this ain\'t your shell window";
	$self->privmsg($channel, "$msg\n");
    }
    elsif ($arg =~ /^\.$/) {
	$msg .= "this ain\'t zwrite";
	$self->privmsg($channel, "$msg\n");
    }
    elsif ($arg =~ /^(rm \-rf \/)$/) {
	$msg .= "you can't even do that, so don't even try.";
	$self->privmsg($channel, "$msg\n");
    }
    elsif ($arg =~ /^ebug(.*pun)/) {
	if ((rand() < .15) && ($1 !~ /webster/)) {
	    $msg = "aaaaaaaaaaaaaaaaaaaaargh";
	    sleep 2;	
	    $self->privmsg($channel, "$msg\n");
	}
    }
    elsif ($arg =~ /^i already had it that way, olga./) { # 
	$msg .= $jayquotes[rand(@jayquotes)];
    }
}

sub on_names
{
    my ($self, $event) = @_;
    my (@list) = $event->args ();

    print "names? @list\n";
}

sub roget {
    my $inarg = shift;
    my ($host, $port) = ('www.m-w.com', 80);
    my ($initial,$final) = ("Synonyms","Related");
    my @result;

    my $url = qq(/cgi-bin/thesaurus?book=Thesaurus\&va=$inarg);
    &make_connection($host, $port);

    select(S); $| = 1;
    select(STDOUT); $| = 1;

    print S "GET $url HTTP/1.0\n\n";

    while(<S>) {
	next unless (m/$initial/);

	s/Text.\s+//;
	s/<b>(.*?)\s*<\/b>/\U$1\E: /g;
	s/\s+/ /g;
	s/<BR>/ /gi;		# kill trailing null values
	s/<[^>]*>//g;		# kill HTML 
	s/\&(lt|gt);/\"/g;

	push @result,$_;
    }
    return \@result;
}

sub handle {
    my $inarg = shift;
    my ($host, $port) = ('www.zelo.com', 80);
    my ($initial, $final) = ("$inarg","</table>");
    my ($result);

    my $url = qq(/firstnames/findname.asp?name=$inarg);
    &make_connection($host, $port);

    select(S); $| = 1;
    select(STDOUT); $| = 1;

    print S "GET $url HTTP/1.0\n\n";

    while(<S>) {
	next unless (m/^$initial/i .. m/$final/i);

	chomp($_); chop($_);
	s/<TD>(.*)<\/TD>\s*$/$1/;
	s/<TD[^>]*><FONT[^>]*>\s*$//;

	s/<[^>]*>//g;		# kill HTML 
	$result .= $_ unless /^\s*$/;;
    }

    if (!$result) {
	$result = "$inarg probably means something to you, but I'm at a loss.";
    }
    else {
	$result =~ s/.*Root: (.*)Origin: (.*)Meaning: (.*)//;
	$result = "$inarg means \'$3\' and originates from $2.  ";
	$result .= "$inarg is a variation on \'$1.\'" if $1;
    }

    return $result;
}

sub get_stockprice {
    my ($inarg,$searchType) = @_;
    my ($host, $port) = ('finance.yahoo.com', 80);
    my ($initial, $final) = ("Symbol",'</pre><center>');
    my @result;

    $inarg =~ s/ +/+/g;

    my $url = qq(/q?s=) . $inarg . qq(\&o=t\&d=v$searchType);
    &make_connection($host, $port);

    select(S); $| = 1;
    select(STDOUT); $| = 1;

    print S "GET $url HTTP/1.0\n";
    print S 'Cookie: Y=v=1&n=15448hmcfrv1k&l=jc7i80e/o&p=m2910dc40200; ';
    print S 'T=z=353fdfa0', "\n\n";	       

    while(<S>) {
	next unless (/^$initial/ .. /$final/);
	if (m/(No such ticker symbol)/) {
	    push @result, $1;
	}
	else {
	    s/<[^>]*>//g;	# kill HTML
	    s/\n/END/;		# kill EOL
	    s/(\-\s+)+//;	# kill trailing null values
	    s/\s+/  /g;		# replace extensive whitespace
	    s/$initial.*$//;	# remove initial line
	    s/($inarg)\s+/$1  /i; # pretty print
	    s/END/\n/;

	    # change index names
	    s/\^DJI/Dow/;
	    s/\^IXIC/Nasdaq/;
	    s/\^SPX/S&P/;

	    push (@result, $_) unless /^\s*$/;
	}
    }

    return \@result;
}

sub get_sniglet {
    my $wordlet = shift;
    my ($sniglets) = ("/home/hsiao/projects/01_olga/sniglets.txt");
    my ($result);

    $wordlet =~ s/\s*//g;

    open(SNG,"<$sniglets") || warn "can't open $sniglets: $!";
    if ($wordlet) {
	while (<SNG>) {
	    if (/^$wordlet/i) {
		chomp($_);
		$result = $_;
		last;
	    }
	}
    }
    else {
	rand($.) < 1 && ($result = $_) while <SNG>;
    }
    close SNG;			
    $result = "I dunno..." if (!$result);
    return $result;
}

sub make_connection {
    my ($host, $port) = @_;

    my $proto = getprotobyname('tcp');
    if ($port =~ /\D/) { $port = getservbyname($port, 'tcp') }
    die "No port" unless $port;
    my $iaddr = inet_aton( $host ) || warn "no host\n";
    my $paddr = sockaddr_in($port, $iaddr );
    socket( S, PF_INET, SOCK_STREAM, $proto) || warn "socket: $!\n";
    connect(S, $paddr) || warn "connect: $!\n";
}

